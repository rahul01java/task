Microsoft Windows [Version 6.1.7601]
Copyright (c) 2009 Microsoft Corporation.  All rights reserved.

C:\Kafka\kafka-2.3.1\bin\windows>zookeeper-server-start.bat c:\Kafka\kafka-2.3.1\config\zookeeper.properties
Classpath is empty. Please build the project first e.g. by running 'gradlew jarAll'

C:\Kafka\kafka-2.3.1\bin\windows>

    compile "org.springframework.hateoas:spring-hateoas:$springHateoasVersion"
	
	
	
create table events (
event_id varchar(1000) PRIMARY KEY,
event_type varchar(1000),
event_data varchar(1000) NOT NULL,
entity_type VARCHAR(1000) NOT NULL,
entity_id VARCHAR(1000) NOT NULL,
triggering_event VARCHAR(1000),
metadata VARCHAR(1000),
published TINYINT DEFAULT 0
);
CREATE INDEX events_idx ON events(entity_type, entity_id, event_id);
CREATE INDEX events_published_idx ON events(published, event_id);
create table entities (
entity_type VARCHAR(1000),
entity_id VARCHAR(1000),
entity_version VARCHAR(1000) NOT NULL,
PRIMARY KEY(entity_type, entity_id)
);
CREATE INDEX entities_idx ON events(entity_type, entity_id);
create table snapshots (
entity_type VARCHAR(1000),
entity_id VARCHAR(1000),
entity_version VARCHAR(1000),
snapshot_type VARCHAR(1000) NOT NULL,
snapshot_json VARCHAR(1000) NOT NULL,
triggering_events VARCHAR(1000),
PRIMARY KEY(entity_type, entity_id, entity_version)
);
CREATE TABLE eventuate . message (
id varchar(767) NOT NULL,
destination varchar(1000) NOT NULL,
headers varchar(1000) NOT NULL,
payload varchar(1000) NOT NULL,
published smallint(6) DEFAULT '0',
creation_time bigint(20) DEFAULT NULL,
PRIMARY KEY (id),

);
saga_type, saga_id, state_name, last_request_id, saga_data_type, saga_data_json, end_state, compensating

CREATE TABLE EVENTUATE . saga_instance(
saga_type varchar(500) NOT NULL,
saga_id varchar (100) NOT NULL,
state_name varchar(900) NOT NULL,
last_request_id varchar(900) DEFAULT'0',
saga_data_type varchar(500) DEFAULT '0',
saga_data_json varchar(500) DEFAULT '0',
end_state varchar(500) NOT NULL,
compensating varchar (800) NOT NULL,
PRIMARY KEY(saga_id),
);


create table received_messages (
consumer_id varchar(767) NOT NULL,
message_id varchar(767) NOT NULL,
creation_time bigint(20) DEFAULT NULL,
PRIMARY KEY (consumer_id, message_id)
);
create table cdc_monitoring (
reader_id VARCHAR(1000) PRIMARY KEY,
last_time BIGINT
);